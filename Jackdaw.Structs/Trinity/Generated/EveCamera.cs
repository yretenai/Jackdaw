/// <auto-generated/>
#nullable enable

namespace Jackdaw.Structs.Trinity.Generated;

public class EveCamera {
    public ITriVectorFunction? Parent { get; set; }
    public IBluePlacementObserver? Audio2Listener { get; set; }
    public float TranslationFromParent { get; set; }
    [BlackArraySize(4)] public float[]? RotationAroundParent { get; set; }
    public ITriVectorFunction? Interest { get; set; }
    [BlackArraySize(4)] public float[]? RotationOfInterest { get; set; }
    public float MinPitch { get; set; }
    public float MaxPitch { get; set; }
    public float MinYaw { get; set; }
    public float MaxYaw { get; set; }
    [BlackArraySize(3)] public float[]? Alignment { get; set; }
    public float FieldOfView { get; set; }
    public float FrontClip { get; set; }
    public float BackClip { get; set; }
    public float Friction { get; set; }
    public bool IdleMove { get; set; }
    public float IdleScale { get; set; }
    public float IdleSpeed { get; set; }
    public bool Noise { get; set; }
    public float NoiseScale { get; set; }
    public float NoiseDamp { get; set; }
    public ITriScalarFunction? NoiseCurve { get; set; }
    public ITriScalarFunction? NoiseScaleCurve { get; set; }
    public ITriScalarFunction? NoiseDampCurve { get; set; }
    public float MaxSpeed { get; set; }
    public bool Update { get; set; }
    [BlackArraySize(3)] public float[]? Pos { get; set; }
    [BlackArraySize(3)] public float[]? Intr { get; set; }
    [BlackArraySize(3)] public float[]? ViewVec { get; set; }
    [BlackArraySize(3)] public float[]? RightVec { get; set; }
    [BlackArraySize(3)] public float[]? UpVec { get; set; }
    public ITriScalarFunction? ZoomCurve { get; set; }
    public float CenterOffset { get; set; }
    [BlackArraySize(3)] public float[]? ExtraTranslation { get; set; }
    public bool UseExtraTranslation { get; set; }
    public float Pitch { get; set; }
    public float Yaw { get; set; }
    public IBlueEventListener? ErrorHandler { get; set; }
    public TriProjection? ProjectionMatrix { get; set; }
    public TriView? ViewMatrix { get; set; }
}
